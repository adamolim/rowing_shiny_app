#         axis.title.y = element_blank())
#
#   x.ANA.08
############################################################################## #
# 3.2 Fréquentation du club  ####
############################################################################## #
############################################################################## #
# 3.2.1 Par mois  ####
############################################################################## #
# Nombre de personnes par mois (moyenne)
d.ANA.02.3 <- d.RCB.30 %>%
count(MONTH) %>%
mutate(n = round(n /(y_max - y_min), digits =1)) %>%
rename("Average" = "n")
# Nombre personnes par mois
d.ANA.02.4 <- d.RCB.30 %>%
group_by(YEAR) %>%
count(MONTH) %>%
rename("Spot" = "n")
# Unir
d.ANA.02.5 <- full_join(d.ANA.02.3, d.ANA.02.4, by = "MONTH")
# Tidy
d.ANA.02.6 <- d.ANA.02.5 %>%
pivot_longer(cols = c(Average, Spot), names_to = "MEASURE", values_to = "Value") %>%
mutate(MEASURE = as.factor(MEASURE))
# Donner le nom aux mois
d.ANA.02.7 <- left_join(d.ANA.02.6, d.MONTH_NAME) %>%
mutate(MONTH_NAME = fct_inorder(as.factor(MONTH_NAME))) %>%
spread(key = MEASURE, value = Value)
#
# # Données du graphique d'exemple
#
# d.ANA.02.7.1 <- d.ANA.02.7 %>%
#   filter(YEAR == "2009")
#
# # Plot
#
# x.ANA.02 <- ggplot(d.ANA.02.7.1) +
#
#   geom_col(mapping = aes(x = MONTH_NAME, y = Average),
#            fill = color_rcb_light[1]) +
#   geom_line(mapping = aes(x = MONTH, y = Spot),
#             size = 1.0,
#             color = "red") +
#   geom_point(mapping = aes(x = MONTH_NAME, y = Spot),
#              size = 4.0,
#              color = "red") +
#
#   theme_classic() +
#   theme(axis.title.x = element_blank(),
#         axis.title.y = element_blank())
#
# x.ANA.02
############################################################################## #
# 3.2.2 Jours de la semaine  ####
############################################################################## #
# Nombre de personnes par jours de la semaine (moyenne)
d.ANA.05.1 <- d.RCB.30 %>%
group_by(SEASON) %>%
count(WEEKDAY, WEEKDAY_NAME) %>%
ungroup() %>%
mutate(n = n /(y_max - y_min)) %>%
rename("Average" = "n") %>%
mutate(Average = round(Average / 13, digits = 1)) # Rebasé par une semaine
# Nombre personnes par semaine
d.ANA.05.2 <- d.RCB.30 %>%
group_by(YEAR, SEASON) %>%
count(WEEKDAY, WEEKDAY_NAME) %>%
rename("Spot" = "n") %>%
mutate(Spot = round(Spot / 13, digits = 1)) # Rebasé par une semaine
# Unir
d.ANA.05.3 <- full_join(d.ANA.05.1, d.ANA.05.2,
by = c("WEEKDAY", "WEEKDAY_NAME", "SEASON"))
############################################################################## #
# 3.2.3 Hours du jours  ####
############################################################################## #
# Variable des heurs
d.ANA.10.1 <- d.RCB.30 %>%
select(DATE_TIME, NAME_PERS, YEAR, SEASON, WEEKDAY_NAME) %>%
mutate(HOURS = hour(DATE_TIME))
# Nombre de personnes par jours de la semaine (moyenne)
d.ANA.10.2 <- d.ANA.10.1 %>%
group_by(SEASON, WEEKDAY_NAME) %>%
count(HOURS) %>%
ungroup() %>%
rename("Average" = "n")
# Nombre personnes par semaine
d.ANA.10.3 <- d.ANA.10.1 %>%
group_by(YEAR, SEASON, WEEKDAY_NAME) %>%
count(HOURS) %>%
rename("Spot" = "n")
# Unir
d.ANA.10.4 <- full_join(d.ANA.10.2, d.ANA.10.3, by = c("SEASON", "WEEKDAY_NAME", "HOURS")) %>%
pivot_longer(cols = c("Average", "Spot"), names_to = "MEASURE", values_to = "Value")
# Calculer le total pour transformer en pourcentage
d.ANA.10.5 <- d.ANA.10.4 %>%
group_by(MEASURE, YEAR, SEASON, WEEKDAY_NAME) %>%
summarise(Value_tot = sum(Value, na.rm = TRUE)) %>%
ungroup()
# Unir
d.ANA.10.6 <- left_join(d.ANA.10.4, d.ANA.10.5, by = c("SEASON", "WEEKDAY_NAME", "YEAR", "MEASURE"))
# Calculer le pourcentage
d.ANA.10.7 <- d.ANA.10.6 %>%
mutate(Value_pc = round(Value / Value_tot *100, digits =1))
# Untidy
d.ANA.10.8 <- d.ANA.10.7 %>%
select(-c(Value, Value_tot)) %>%
pivot_wider(names_from = MEASURE, values_from = Value_pc)
# # Selection pour le plot d'exemple
#
# d.ANA.10.9 <- d.ANA.10.8 %>%
#   filter(YEAR == 2020) %>%
#   filter(SEASON == "Spring") %>%
#   filter(WEEKDAY_NAME == "Monday") %>%
#   mutate(MEASURE = "Sport")
#
# # Plot
#
# x.ANA.10 <- ggplot(d.ANA.10.9) +
#
#   geom_col(mapping = aes(x = HOURS, y = Average),
#            fill = color_rcb_light[1]) +
#   geom_line(mapping = aes(x = HOURS, y = Spot),
#             size = 1.0,
#             color = "red") +
#   geom_point(mapping = aes(x = HOURS, y = Spot),
#              size = 4.0,
#              color = "red") +
#
#   theme_classic() +
#   theme(axis.title.x = element_blank(),
#         axis.title.y = element_blank())
#
# x.ANA.10
############################################################################## #
# 3.3 Disciplines ####
############################################################################## #
############################################################################## #
# 3.3.1 Sweep or scull ####
############################################################################## #
# Nombre sorties des personnes
d.ANA.08.1 <- d.RCB.30 %>%
count(YEAR, BOAT_TYPE) %>%
arrange(YEAR) %>%
rename("NUMBER_TRIP_PERS" = "n")
# Nombre de kilomètres des personnes
d.ANA.08.2 <- d.RCB.30 %>% # par personne
group_by(YEAR, BOAT_TYPE) %>%
summarise(DIST_KM_PERS = sum(DIST_KM)) %>%
ungroup()
# Nombre sorties des bateaux
d.ANA.08.3 <- d.RCB.40 %>%
count(YEAR, BOAT_TYPE) %>%
arrange(YEAR) %>%
rename("NUMBER_TRIP_BOAT" = "n")
# Nombre de kilomètres des bateaux
d.ANA.08.4 <- d.RCB.40 %>% # par personne
group_by(YEAR, BOAT_TYPE) %>%
summarise(DIST_KM_BOAT = sum(DIST_KM)) %>%
ungroup()
# Union
d.ANA.08.5 <- full_join(d.ANA.08.1, d.ANA.08.2, by = c("YEAR", "BOAT_TYPE"))
d.ANA.08.6 <- full_join(d.ANA.08.3, d.ANA.08.4, by = c("YEAR", "BOAT_TYPE"))
d.ANA.08.7 <- full_join(d.ANA.08.5, d.ANA.08.6, by = c("YEAR", "BOAT_TYPE"))
# Tidy and unit
d.ANA.08.8 <- d.ANA.08.7 %>%
pivot_longer(cols = c(DIST_KM_BOAT, NUMBER_TRIP_BOAT, DIST_KM_PERS, NUMBER_TRIP_PERS), names_to = "DIMENSION", values_to = "Value") %>%
mutate(UNIT = case_when(DIMENSION == "NUMBER_TRIP_PERS" ~ " persons' trips",
DIMENSION == "DIST_KM_PERS" ~ " persons' km",
DIMENSION == "NUMBER_TRIP_BOAT" ~ " boats' trips",
DIMENSION == "DIST_KM_BOAT" ~ " persons' km"))
############################################################################## #
# 3.3.2 Boats category ####
############################################################################## #
# Nombre sorties des personnes
d.ANA.09.1 <- d.RCB.30 %>%
count(YEAR, BOAT_SIZE) %>%
arrange(YEAR) %>%
rename("NUMBER_TRIP_PERS" = "n")
# Nombre de kilomètres des personnes
d.ANA.09.2 <- d.RCB.30 %>% # par personne
group_by(YEAR, BOAT_SIZE) %>%
summarise(DIST_KM_PERS = sum(DIST_KM)) %>%
ungroup()
# Nombre sorties des bateaux
d.ANA.09.3 <- d.RCB.40 %>%
count(YEAR, BOAT_SIZE) %>%
arrange(YEAR) %>%
rename("NUMBER_TRIP_BOAT" = "n")
# Nombre de kilomètres des bateaux
d.ANA.09.4 <- d.RCB.40 %>% # par personne
group_by(YEAR, BOAT_SIZE) %>%
summarise(DIST_KM_BOAT = sum(DIST_KM)) %>%
ungroup()
# Union
d.ANA.09.5 <- full_join(d.ANA.09.1, d.ANA.09.2, by = c("YEAR", "BOAT_SIZE"))
d.ANA.09.6 <- full_join(d.ANA.09.3, d.ANA.09.4, by = c("YEAR", "BOAT_SIZE"))
d.ANA.09.7 <- full_join(d.ANA.09.5, d.ANA.09.6, by = c("YEAR", "BOAT_SIZE"))
# Tidy and unit
d.ANA.09.8 <- d.ANA.09.7 %>%
pivot_longer(cols = c(DIST_KM_BOAT, NUMBER_TRIP_BOAT, DIST_KM_PERS, NUMBER_TRIP_PERS), names_to = "DIMENSION", values_to = "Value") %>%
mutate(UNIT = case_when(DIMENSION == "NUMBER_TRIP_PERS" ~ " persons' trips",
DIMENSION == "DIST_KM_PERS" ~ " persons' km",
DIMENSION == "NUMBER_TRIP_BOAT" ~ " boats' trips",
DIMENSION == "DIST_KM_BOAT" ~ " persons' km"))
############################################################################## #
# 3.3.2 Destinations ####
############################################################################## #
# Par les tailles d'équipage
d.ANA.11.1 <- d.RCB.40 %>%
group_by(YEAR, BOAT_SIZE) %>%
count(DIST_NAME) %>%
ungroup() %>%
arrange(desc(n)) %>%
mutate(MEASURE = "Average")
# Tous les tailles d'équipage
d.ANA.11.2 <- d.RCB.40 %>%
group_by(YEAR) %>%
count(DIST_NAME) %>%
ungroup() %>%
mutate(n = n / 4) %>% # Nombre de catégories de
arrange(desc(n)) %>%
mutate(MEASURE = "Average")
############################################################################## #
# 3.4 Bateaux ####
############################################################################## #
############################################################################## #
# 3.4.1 Skiff 1x ####
############################################################################## #
# Nombre de kilomètres
d.ANA.03.3 <- d.RCB.40 %>%
group_by(BOAT_NAME, YEAR) %>%
summarise(DIST_KM = sum(DIST_KM)) %>%
ungroup()
# # Données du graphique d'exemple
#
# d.ANA.03.3.1 <- d.ANA.03.3 %>%
#   filter(BOAT_NAME %in% "Ballerina_Bianca")
#
# # Plot
#
# x.ANA.03 <- ggplot(d.ANA.03.3.1, mapping = aes(x = YEAR, y = DIST_KM)) +
#
#   geom_point(size = 4.0, color = "red") +
#   geom_path(size = 1.0, color = "red") +
#
#   theme_classic() +
#   theme(axis.title.x = element_blank(),
#         axis.title.y = element_blank()) +
#
#   scale_x_continuous(breaks = seq(y_min, y_max, 1))
#
# x.ANA.03
d.ANA.11.3 <- left_join(d.ANA.11.1, d.ANA.11.2)
# Par les tailles d'équipage
d.ANA.11.1 <- d.RCB.40 %>%
group_by(YEAR, BOAT_SIZE) %>%
count(DIST_NAME) %>%
ungroup() %>%
arrange(desc(n)) %>%
rename("Average_crew" = "n")
# Tous les tailles d'équipage
d.ANA.11.2 <- d.RCB.40 %>%
group_by(YEAR) %>%
count(DIST_NAME) %>%
ungroup() %>%
mutate(n = n / 4) %>% # Nombre de catégories de
arrange(desc(n)) %>%
rename("Spot_crew" = "n")
# Unir
d.ANA.11.3 <- left_join(d.ANA.11.1, d.ANA.11.2)
d.ANA.11.3 <- left_join(d.ANA.11.1, d.ANA.11.2, by = c("YEAR", "DIST_NAME"))
View(d.ANA.11.3)
View(d.RCB.30)
View(d.RCB.40)
# Par les tailles d'équipage
d.ANA.11.1 <- d.RCB.40 %>%
group_by(YEAR, BOAT_SIZE) %>%
count(DIST_NAME, DIST_KM) %>%
ungroup() %>%
arrange(desc(n)) %>%
rename("Average_crew" = "n")
# Tous les tailles d'équipage
d.ANA.11.2 <- d.RCB.40 %>%
group_by(YEAR) %>%
count(DIST_NAME, DIST_KM) %>%
ungroup() %>%
mutate(n = n / 4) %>% # Nombre de catégories de
arrange(desc(n)) %>%
rename("Spot_crew" = "n")
# Unir
d.ANA.11.3 <- left_join(d.ANA.11.1, d.ANA.11.2, by = c("YEAR", "DIST_NAME"))
# Par les tailles d'équipage
d.ANA.11.1 <- d.RCB.40 %>%
group_by(YEAR, BOAT_SIZE) %>%
count(DIST_NAME, DIST_KM) %>%
ungroup() %>%
arrange(desc(n)) %>%
rename("Average_crew" = "n")
# Tous les tailles d'équipage
d.ANA.11.2 <- d.RCB.40 %>%
group_by(YEAR) %>%
count(DIST_NAME, DIST_KM) %>%
ungroup() %>%
mutate(n = n / 4) %>% # Nombre de catégories de
arrange(desc(n)) %>%
rename("Spot_crew" = "n")
# Unir
d.ANA.11.3 <- left_join(d.ANA.11.1, d.ANA.11.2, by = c("YEAR", "DIST_NAME", "DIST_KM"))
# Par es tailles d'équipage
d.ANA.11.1 <- d.RCB.40 %>%
group_by(YEAR, BOAT_SIZE) %>%
count(DIST_NAME, DIST_KM) %>%
ungroup() %>%
arrange(desc(n)) %>%
rename("Spot_crew" = "n")
# Tous les tailles d'équipage
d.ANA.11.2 <- d.RCB.40 %>%
group_by(YEAR) %>%
count(DIST_NAME, DIST_KM) %>%
ungroup() %>%
mutate(n = n / 4) %>% # Nombre de catégories de
arrange(desc(n)) %>%
rename("Average_crew" = "n")
# Unir
d.ANA.11.3 <- left_join(d.ANA.11.1, d.ANA.11.2, by = c("YEAR", "DIST_NAME", "DIST_KM"))
d.ANA.11.3 <- left_join(d.ANA.11.1, d.ANA.11.2, by = c("YEAR", "DIST_NAME", "DIST_KM")) %>%
arrange(YEAR, DIST_KM) %>%
mutate(DIST_NAME = fct_inorder(as.factor(DIST_NAME)))
View(d.ANA.11.3)
filter(YEAR == 2010) %>%
filter(BOAT_SIZE == 1)
d.ANA.11.4 <- d.ANA.11.3 %>%
filter(YEAR == 2010) %>%
filter(BOAT_SIZE == 1)
View(d.ANA.11.4)
x.ANA.11 <- ggplot(d.ANA.11.4) +
geom_col(mapping = aes(x = DIST_NAME, y = Average_crew),
fill = color_rcb_light[1]) +
geom_line(mapping = aes(x = DIST_KM, y = Spot_crew),
size = 1.0,
color = "red") +
geom_point(mapping = aes(x = DIST_NAME, y = Spot_crew),
size = 4.0,
color = "red") +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank())
x.ANA.11
x.ANA.11 <- ggplot(d.ANA.11.4) +
geom_col(mapping = aes(x = DIST_NAME, y = Average_crew),
fill = color_rcb_light[1]) +
geom_line(mapping = aes(x = DIST_NAME, y = Spot_crew),
size = 1.0,
color = "red") +
geom_point(mapping = aes(x = DIST_NAME, y = Spot_crew),
size = 4.0,
color = "red") +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank())
x.ANA.11
x.ANA.11 <- ggplot(d.ANA.11.4) +
geom_col(mapping = aes(x = DIST_NAME, y = Average_crew),
fill = color_rcb_light[1]) +
geom_line(mapping = aes(x = as.numeric(DIST_KM), y = Spot_crew),
size = 1.0,
color = "red") +
geom_point(mapping = aes(x = DIST_NAME, y = Spot_crew),
size = 4.0,
color = "red") +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank())
x.ANA.11
# Plot
x.ANA.11 <- ggplot(d.ANA.11.4) +
geom_col(mapping = aes(x = DIST_NAME, y = Average_crew),
fill = color_rcb_light[1]) +
geom_line(mapping = aes(x = as.numeric(as.character(DIST_KM)), y = Spot_crew),
size = 1.0,
color = "red") +
geom_point(mapping = aes(x = DIST_NAME, y = Spot_crew),
size = 4.0,
color = "red") +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank())
x.ANA.11
# Unir
d.ANA.11.3 <- left_join(d.ANA.11.1, d.ANA.11.2, by = c("YEAR", "DIST_NAME", "DIST_KM")) %>%
arrange(YEAR, DIST_KM) %>%
mutate(DIST_NAME = fct_inorder(as.factor(DIST_NAME))) %>%
mutate(DIST_KM = as.numeric(as.character(DIST_KM)))
# Données du graphique d'exemple
d.ANA.11.4 <- d.ANA.11.3 %>%
filter(YEAR == 2010) %>%
filter(BOAT_SIZE == 1)
# Plot
x.ANA.11 <- ggplot(d.ANA.11.4) +
geom_col(aes(x = DIST_NAME, y = Average_crew),
fill = color_rcb_light[1]) +
geom_line(aes(x = DIST_KM, y = Spot_crew),
size = 1.0,
color = "red") +
geom_point(aes(x = DIST_NAME, y = Spot_crew),
size = 4.0,
color = "red") +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank())
x.ANA.11
x.ANA.11 <- ggplot(d.ANA.11.4) +
geom_col(aes(x = DIST_NAME, y = Average_crew),
fill = color_rcb_light[1]) +
# geom_line(aes(x = DIST_KM, y = Spot_crew),
#           size = 1.0,
#           color = "red") +
geom_point(aes(x = DIST_NAME, y = Spot_crew),
size = 4.0,
color = "red") +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank())
x.ANA.11
# Unir
d.ANA.11.3 <- left_join(d.ANA.11.1, d.ANA.11.2, by = c("YEAR", "DIST_NAME", "DIST_KM")) %>%
arrange(YEAR, DIST_KM) %>%
mutate(DIST_NAME = fct_inorder(as.factor(DIST_NAME)))
# Données du graphique d'exemple
d.ANA.11.4 <- d.ANA.11.3 %>%
filter(YEAR == 2010) %>%
filter(BOAT_SIZE == 1)
# Plot
x.ANA.11 <- ggplot(d.ANA.11.4) +
geom_col(aes(x = DIST_NAME, y = Average_crew),
fill = color_rcb_light[1]) +
geom_line(aes(x = DIST_KM, y = Spot_crew),
size = 1.0,
color = "red") +
geom_point(aes(x = DIST_NAME, y = Spot_crew),
size = 4.0,
color = "red") +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank())
x.ANA.11
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
d.ANA.11.4 <- d.ANA.11.3 %>%
arrange(YEAR, DIST_KM) %>%
mutate(DIST_NAME = fct_inorder(as.factor(DIST_NAME))) %>%
pivot_longer(cols = c("Average_crew", "Spot_crew"), names_to = "MEASURE", values_to = "Value")
d.ANA.11.5 <- d.ANA.11.4 %>%
group_by(YEAR, BOAT_SIZE, MEASURE) %>%
summarise(Value_tot = sum(Value, na.rm = TRUE)) %>%
ungroup()
View(d.ANA.11.5)
d.ANA.11.6 <- left_join(d.ANA.11.4, d.ANA.11.5, by = c("SEASON", "WEEKDAY_NAME", "YEAR", "MEASURE"))
# Calculer le pourcentage
d.ANA.11.7 <- d.ANA.11.6 %>%
mutate(Value_pc = round(Value / Value_tot *100, digits =1))
# Calculer le total pour transformer en pourcentage
d.ANA.11.5 <- d.ANA.11.4 %>%
group_by(YEAR, BOAT_SIZE, MEASURE) %>%
summarise(Value_tot = sum(Value, na.rm = TRUE)) %>%
ungroup()
# Unir
d.ANA.11.6 <- left_join(d.ANA.11.4, d.ANA.11.5)
# Calculer le pourcentage
d.ANA.11.7 <- d.ANA.11.6 %>%
mutate(Value_pc = round(Value / Value_tot *100, digits =1))
# Unir
d.ANA.11.6 <- left_join(d.ANA.11.4, d.ANA.11.5, by = c("YEAR", "BOAT_SIZE", "MEASURE"))
# Calculer le pourcentage
d.ANA.11.7 <- d.ANA.11.6 %>%
mutate(Value_pc = round(Value / Value_tot *100, digits =1))
View(d.ANA.11.7)
d.ANA.11.8 <- d.ANA.11.7 %>%
select(-c(Value, Value_tot)) %>%
pivot_wider(names_from = MEASURE, values_from = Value_pc)
View(d.ANA.11.8)
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
d.ANA.11.8 <- d.ANA.11.7 %>%
select(-c(Value, Value_tot)) %>%
pivot_wider(names_from = MEASURE, values_from = Value_pc) %>%
mutate(DIST_NAME = paste0(DIST_NAME, " (", DIST_KM, ")"))
d.ANA.11.8 <- d.ANA.11.7 %>%
select(-c(Value, Value_tot)) %>%
pivot_wider(names_from = MEASURE, values_from = Value_pc) %>%
mutate(DIST_NAME_2 = paste0(DIST_NAME, " (", DIST_KM, "km )")) %>%
arrange(YEAR, DIST_KM) %>%
mutate(DIST_NAME = fct_inorder(as.factor(DIST_NAME_2)))
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
runApp('app.R.R')
library(shiny); runApp('app.R.R')
library(shiny); runApp('app.R.R')
runApp('app.R.R')
